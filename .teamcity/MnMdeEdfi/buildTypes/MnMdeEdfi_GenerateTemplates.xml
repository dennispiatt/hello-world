<?xml version="1.0" encoding="UTF-8"?>
<build-type xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://www.jetbrains.com/teamcity/schemas/2021.1/project-config.xsd">
  <name>0. Generate Minimal and Populated Templates</name>
  <description />
  <settings>
    <disabled-settings>
      <setting-ref ref="TRIGGER_1" />
    </disabled-settings>
    <parameters>
      <param name="env.msbuild_buildConfiguration" value="Release" />
      <param name="odsapi.build.runDotnetTest" value="False" />
      <param name="odsapi.build.runPester" value="False" />
      <param name="odsapi.build.runPostman" value="False" />
      <param name="odsapi.build.runSmokeTest" value="False" />
    </parameters>
    <build-runners>
      <runner id="RUNNER_1" name="Clean database templates directory" type="jetbrains_powershell">
        <parameters>
          <param name="jetbrains_powershell_errorToError" value="true" />
          <param name="jetbrains_powershell_execution" value="PS1" />
          <param name="jetbrains_powershell_noprofile" value="true" />
          <param name="jetbrains_powershell_script_code"><![CDATA[write-host "*** determining sql service account"
$sqlQuery = @"
	SELECT servicename, service_account
	FROM sys.dm_server_services
	GO
"@

Invoke-SqlCmd -ServerInstance "(local)" -Query $sqlQuery

$backupPath = "Ed-Fi-ODS-Implementation\DatabaseTemplate\Database"

if(Test-Path $backupPath) { 
    Write-Host "Removing contents of $backupPath"
	Remove-Item "$backupPath\*" -Recurse -Force
} else { 
	Write-Host "Creating Directory $backupPath"
	md $backupPath
}

$user = "NT Service\MSSQLSERVER"
$ACL = Get-ACL -Path $backupPath

(Get-ACL -Path $backupPath).Access | `
	Format-Table IdentityReference,FileSystemRights,AccessControlType,IsInherited,InheritanceFlags -AutoSize

$AccessRule = New-Object System.Security.AccessControl.FileSystemAccessRule($user,"FullControl","Allow")
$ACL.SetAccessRule($AccessRule)
$ACL | Set-Acl -Path $backupPath

(Get-ACL -Path $backupPath).Access | `
    Format-Table IdentityReference,FileSystemRights,AccessControlType,IsInherited,InheritanceFlags -AutoSize]]></param>
          <param name="jetbrains_powershell_script_mode" value="CODE" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_2" name="Add Nuget Source for Codegen Package" type="jetbrains_powershell">
        <parameters>
          <param name="jetbrains_powershell_errorToError" value="true" />
          <param name="jetbrains_powershell_execution" value="PS1" />
          <param name="jetbrains_powershell_noprofile" value="true" />
          <param name="jetbrains_powershell_script_code" value="&amp; dotnet nuget update source github -u %teamcity.github.user% -p %teamcity.github.personalAccessToken% --store-password-in-clear-text --configfile ./NuGet.Config" />
          <param name="jetbrains_powershell_script_file" value="" />
          <param name="jetbrains_powershell_script_mode" value="CODE" />
          <param name="teamcity.build.workingDir" value="Ed-Fi-ODS-Implementation" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_3" name="Build Database Templates" type="jetbrains_powershell">
        <parameters>
          <param name="jetbrains_powershell_errorToError" value="true" />
          <param name="jetbrains_powershell_execution" value="PS1" />
          <param name="jetbrains_powershell_noprofile" value="" />
          <param name="jetbrains_powershell_script_file" value="buildDatabaseTemplates.ps1" />
          <param name="jetbrains_powershell_script_mode" value="FILE" />
          <param name="teamcity.build.workingDir" value="Ed-Fi-ODS-Implementation" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_4" name="Publish NuGet packages to Nexus" type="jb.nuget.publish">
        <parameters>
          <param name="nuget.path" value="%teamcity.tool.NuGet.CommandLine.DEFAULT%" />
          <param name="nuget.publish.files" value="Ed-Fi-ODS-Implementation\packages\*.nupkg" />
          <param name="nuget.publish.source" value="%nexus.nuget.package.source%" />
          <param name="nuget.push.commandline" value="-Timeout 6000" />
          <param name="secure:nuget.api.key" value="credentialsJSON:b5e78adb-405c-481e-ab62-4af7b6635952" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
    </build-runners>
    <vcs-settings>
      <vcs-entry-ref root-id="MnMdeEdfi_MainV52" />
    </vcs-settings>
    <requirements />
    <build-triggers>
      <build-trigger id="TRIGGER_1" type="vcsTrigger">
        <parameters>
          <param name="branchFilter" value="+:*" />
          <param name="enableQueueOptimization" value="true" />
          <param name="quietPeriodMode" value="DO_NOT_USE" />
        </parameters>
      </build-trigger>
    </build-triggers>
    <cleanup />
  </settings>
</build-type>

